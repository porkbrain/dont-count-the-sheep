#[rustfmt::skip]
/// This is an autogenerated implementation by the map maker tool.
impl main_game_lib::top_down::layout::ZoneTile for crate::MallTileKind
{ #[inline] fn zone_group(&self) ->
Option<main_game_lib::top_down::layout::ZoneGroup>
{
    use main_game_lib::top_down::layout::ZoneGroup;
    #[allow(clippy::match_single_binding)] match self
    { Self::ExitZone => Some(ZoneGroup(0)),
Self::GoodWater => Some(ZoneGroup(1)),
Self::FruitsAndVeggies => Some(ZoneGroup(1)),
Self::Aisle1 => Some(ZoneGroup(1)),
Self::Aisle2 => Some(ZoneGroup(1)),
Self::Aisle3 => Some(ZoneGroup(1)),
Self::Aisle4 => Some(ZoneGroup(1)),
Self::Fridges => Some(ZoneGroup(1)),
 #[allow(unreachable_patterns)] _ => None, }
} #[inline] fn zone_size(&self) -> Option<usize>
{
    #[allow(clippy::match_single_binding)] match self
    { Self::ExitZone => Some(153),
Self::GoodWater => Some(40),
Self::FruitsAndVeggies => Some(1139),
Self::Aisle1 => Some(255),
Self::Aisle2 => Some(471),
Self::Aisle3 => Some(398),
Self::Aisle4 => Some(289),
Self::Fridges => Some(204),
 #[allow(unreachable_patterns)] _ => None, }
} type Successors = Self; #[inline] fn zone_successors(&self) -> Option<&'static
[Self::Successors]>
{
    #[allow(clippy::match_single_binding)] match self
    { Self::GoodWater => Some(&[Self::Aisle2,Self::Fridges]),
Self::FruitsAndVeggies => Some(&[Self::Aisle4,Self::Fridges]),
Self::Aisle1 => Some(&[Self::Aisle2]),
Self::Aisle2 => Some(&[Self::GoodWater,Self::Aisle1,Self::Aisle3,Self::Fridges]),
Self::Aisle3 => Some(&[Self::Aisle2,Self::Aisle4,Self::Fridges]),
Self::Aisle4 => Some(&[Self::FruitsAndVeggies,Self::Aisle3,Self::Fridges]),
Self::Fridges => Some(&[Self::GoodWater,Self::FruitsAndVeggies,Self::Aisle2,Self::Aisle3,Self::Aisle4]),
 #[allow(unreachable_patterns)] _ => None, }
}
 }
